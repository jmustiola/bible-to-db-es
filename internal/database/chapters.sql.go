// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: chapters.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createChapter = `-- name: CreateChapter :one
INSERT INTO 
    chapters (id, created_at, updated_at, num_chapter, num_verses, book_id)
VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, created_at, updated_at, num_chapter, num_verses, book_id
`

type CreateChapterParams struct {
	ID         uuid.UUID
	CreatedAt  time.Time
	UpdatedAt  time.Time
	NumChapter int32
	NumVerses  int32
	BookID     uuid.UUID
}

func (q *Queries) CreateChapter(ctx context.Context, arg CreateChapterParams) (Chapter, error) {
	row := q.db.QueryRowContext(ctx, createChapter,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.NumChapter,
		arg.NumVerses,
		arg.BookID,
	)
	var i Chapter
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.NumChapter,
		&i.NumVerses,
		&i.BookID,
	)
	return i, err
}
